vars:
  hosts: "{{ plugin('shell','python3 simu_infra_inv.py') }}"
  queryset:
    path: '{}'
    select:
    - as: ap_code
      expr: value.ap_code
    - as: hostname
      expr: key
    - as: env
      expr: value.environment
      styling:
      - when: ["value.environment == 'dev'"]
        style: "background-color: lightblue"
    - as: dc_name
      expr: value.dc_name
    - as: os
      expr: value.os
    - as: os_level
      expr: value.os_level
    - as: state
      expr: value.state
      styling:
        - when: ["value.state == 'alive'"]
          style: "color: green"
        - when: ["value.state == 'unreachable'"]
          style: "color: red"
          formating: "underlined"
    - as: uptime
      expr: days
      styling:
        - when: ["uptime_in_day | int < 30"]
          style: "color: green"
        - when: ["uptime_in_day | int >= 30","uptime_in_day | int < 60"]
          style: "color: yellow"
        - when: ["uptime_in_day | int >= 60"]
          style: "color: red"

          # formating: "underlined"
    - as: location
      expr: dc_location[value.dc_name]
    - as: ip_address
      expr: value.ip_address
    views:
      dc_location:
        dc-1: East
        dc-2: North
        dc-3: North
        dc-4: South
        dc-5: West
        dc-6: West
        dc-7: West
      uptime_in_day: "((( value.uptime | int ) / (60 * 60 * 24)) | string).split('.')[0]"
      days: "(uptime_in_day | string) + ' days' if uptime_in_day | int > 1 else '' if uptime_in_day == '' else (uptime_in_day | string)"
    format: simple
  # out: "{{ hosts | jtable(queryset=queryset) }}"
  
# stdout: "{{ hosts | jtable(queryset=queryset) }}"
stdout: |
  {% set out = hosts | jtable(queryset=queryset)  %}
  {% if queryset.format == 'html' %}
  {{ ('<h1>Infra view</h1>' + out) | wrap_html('the super title 2')}}
  {% else %}
  {{ hosts | jtable(queryset=queryset) }}
  {% endif %}
