context:
  hosts:
    - {hostname: host_1, os: linux, uptime: 1879723, state: alive, env: qua, dc: dc_2}
    - {hostname: host_8,  uptime: 6279723, state: alive, env: qua, dc: dc_2}
    - {hostname: host_2, os: linux,  env: qua, dc: dc_2}
    - {hostname: host_7, os: windows, uptime: 6879723, state: alive, env: qua, dc: dc_2}
    - {hostname: host_3, os: linux, uptime: 534554, state: "unreachable", env: qua, dc: dc_1}
    # - {hostname: host_4, os: linux, env: qua, dc: dc_1}

queryset:
  path: "{host}"
  select:
    - as: hostname
      expr: host.hostname
    - as: region
      expr: dc_location[host.dc]
    - as: dc name
      expr: host.dc
    - as: os
      expr: host.os
    - as: state
      expr: host.state
      styling:
        - when: 
          - "host.state == 'unreachable'"
          style: "font-color: red"
        - when:
          - "host.state == 'alive'"
          style: "font-color: green"
    - as: uptime
      expr: "uptime_in_day +  ' days'"
      styling:
        - when:
          - "uptime_in_day | int < 30"
          style: "font-color: green"
        - when: 
          - "uptime_in_day | int >= 30"
          style: "font-color: red"
          formating: "underlined"
  when: "uptime_in_day | int > 30 or host.state == 'unreachable'"
    # - "uptime_in_day | int > 30 or host.state == 'unreachable'"
    # - "host.os == 'linux'"
      
  views:
    dc_location:
      dc_1: East
      dc_2: North
    uptime_in_day: "((( host.uptime | int ) / (60 * 60 * 24)) | string).split('.')[0]"
    # days: "uptime_in_day + ' days' if uptime_in_day | int > 1 else '' if uptime_in_day == '' else uptime_in_day + ' day'"

out: "{{ hosts | sort (attribute='dc') | jtable(queryset=queryset)}}"